--- DDl Command
DROP TABLE IF EXISTS employee;
CREATE TABLE employee(
Employee_id serial Primary Key,
name_of_employee VARCHAR (100) not null,
Position VARCHAR(100) not null,
Department VARCHAR(50),
Hire_date Date,
Salary Numeric(10,2)
);

--Explanation 
/*---üí° CREATE TABLE employee (...)
CREATE TABLE ‚û§ This tells the database "Hey! I'm creating a new table."

employee ‚û§ This is the name of the table. You're naming it employee to store information about employees.

üß± Inside the brackets (...) you're defining the columns (think of them like fields in a form or Excel sheet).
üî¢ Employee_id serial Primary Key
Employee_id ‚û§ This is the column name, used to uniquely identify each employee.

serial ‚û§ This is a special data type that automatically increases numbers like 1, 2, 3... when you add new records. You don‚Äôt need to type it yourself.

Primary Key ‚û§ This means this column is the main unique identifier. No two employees can have the same ID. It must be unique and not null.

üë§ Name VARCHAR(100) notnull
Name ‚û§ The column that stores the name of the employee.

VARCHAR(100) ‚û§ It means you can store text up to 100 characters. It‚Äôs flexible, like writing a name.

notnull (should be written as NOT NULL) ‚û§ This means you must provide a name. It cannot be left blank.

üíº Position VARCHAR(100) notnull
Position ‚û§ This stores the employee‚Äôs job title or role, like "Manager", "Developer", etc.

VARCHAR(100) ‚û§ Again, text up to 100 characters.

notnull ‚û§ You must enter a position. It cannot be empty.

üè¢ Department VARCHAR(50)
Department ‚û§ This column stores the department name, like "HR", "IT", "Sales", etc.

VARCHAR(50) ‚û§ Text up to 50 characters.

No NOT NULL here ‚û§ So it's optional ‚Äî you can leave it empty if needed.

üìÖ Hire_date Date
Hire_date ‚û§ The column that stores the date when the employee was hired.

Date ‚û§ This data type only allows date values, like 2025-04-17.

üí∞ Salary Numeric(10,2)
Salary ‚û§ Stores the salary amount for the employee.

Numeric(10,2) ‚û§ This means you can store numbers with:

Up to 10 digits in total

2 digits after the decimal point
For example: 12345678.90*/

--We create heading of the table now we insert date in employee table
Insert into employee(name_of_employee,Position,Department,Hire_date,salary)  --This tells PostgreSQL: üëâ ‚ÄúI want to insert new data into the table named employee.‚Äù
VALUES  ---The VALUES keyword is followed by rows of data, one for each employee.
('Mohit Sharma','Data Analyst','IT','2020-12-01',30000),
('Amit Sharma','System Engineer','IT','2019-11-01',35000),
('Abhinandan Mankotia','Data Analyst','IT','2018-07-01',45000);

SELECT*FROM employee;   ---This is a SQL query used to view all data from the employee table.

--Now ALTER, Alter is used to edit or change 

ALTER table employee
 RENAME column Name TO Name_of_employee;

--Drop is used to delete whole column
ALTER TABLE employee DROP COLUMN Salary;

--TRUNCATE used to erase data from employee table
TRUNCATE TABLE employee;

--Update 
UPDATE employee
SET Salary = 40000
WHERE Employee_id = 1;

--when we update command run the sequence is disturbe, first entry goes to last, to arrange seguence we use

select * from employee ORDER BY Employee_id ASC;

--Delete
DELETE FROM employee
WHERE Employee_id = 3;

--BEGIN
BEGIN;  -- Start the transaction

UPDATE employee
SET Salary = 50000
WHERE Employee_id = 2;

-- If everything is fine, commit the changes
COMMIT;


RollBack; --undoes changes made in the current transaction, restoring consistency.





